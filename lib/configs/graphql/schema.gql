# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  name: String!
  email: String!
  image: String
}

type ThemeOwner {
  id: ID!
  name: String!
}

type ThemeItem {
  id: ID!
  title: String!
  image: String!
  addedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Theme {
  id: ID!
  owner: ThemeOwner!
  title: String!
  image: String
  private: Boolean!
  total: Float!
  items: [ThemeItem!]!
}

type Media {
  id: ID!
  type: MediaType!
  status: MediaStatus!
  title: String!
  image: String!
  genres: [String!]!
  isAdult: Boolean!
  startDate: DateTime
  endDate: DateTime
}

enum MediaType {
  anime
  movie
  manga
  novel
}

enum MediaStatus {
  finished
  releasing
  unreleased
  cancelled
}

type EvaluationMedia {
  id: ID!
  title: String!
  image: String!
}

type Evaluation {
  id: ID!
  userId: ID!
  media: EvaluationMedia!
  emotion: Emotion!
  private: Boolean!
}

enum Emotion {
  anger
  surprise
  sadness
  disgust
  normal
  joy
  fear
  happyness
  nice
}

type Query {
  getMe: User!
  GetMedia(mediaId: ID!): Media!
  GetMediaList(title: String): [Media!]!
  GetTheme(themeId: ID!): Theme!
  GetThemeList(ownerId: ID): [Theme!]!
  GetEvaluation(mediaId: ID!): Evaluation
  GetEvaluationList(userId: ID!): [Evaluation!]!
}

type Mutation {
  Signup(name: String!, email: String!, image: String): User!
  EditUser(name: String, email: String, image: String): User!
  RemoveUser(reason: String): Boolean!
  AddMedia(type: MediaType!, status: MediaStatus!, title: String!, image: String!, genres: [String!]!, isAdult: Boolean, startDate: DateTime, endDate: DateTime): Media!
  CreateTheme(title: String!): Theme!
  EditTheme(themeId: ID!, title: String, image: String, private: Boolean): Theme!
  RemoveTheme(themeId: ID!): Boolean!
  AddThemeItem(themeId: ID!, mediaId: ID!): Theme!
  DeleteThemeItem(themeId: ID!, mediaId: ID!): Theme!
  Evaluate(mediaId: ID!, emotion: Emotion!): Evaluation!
  RemoveEvaluation(mediaId: ID!): Boolean!
}